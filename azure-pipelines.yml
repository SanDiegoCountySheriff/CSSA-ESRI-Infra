trigger:
  - main
  
#pool:
#    vmImage: ubuntu-latest
  
pool:
  name: 'selfhostpool001'

variables:
  DeploymentDefaultLocation: 'westus'
  System.Debug: true
  ResourceGroupName: 'rg-gis-devtest'
  NetworkConnectionSharedKey: ''
  ResourceAgency: ''
  VirtualMachineAdminPassword: ''
  VirtualMachineSize: 'Standard_D2s_v4'

  # deploy optional site-to-site VPN
  DeploySTSVpn: true

  # deploy optional VPN connection 
  DeployConn: true

  # deploy network hub (optional)
  DeployHub: true

  # peer hub to spoke (optional)
  PeerHubSpoke: true

  # define shared network hub addressing (optional hub)
  SharedHubVirtualNetworkAddressPrefix: '172.18.0.0/23'
  SharedHubVirtualNetworkGatewaySubnetPrefix: '172.18.0.0/25'
  SharedHubVirtualNetworkFwSubnetPrefix: '172.18.0.128/25'
  SharedHubVirtualNetworkAppGwSubnetPrefix: '172.18.1.0/25'

  # define gis network hub addressing (required of spoke)
  GisVirtualNetworkAddressPrefix: '172.18.2.0/24'
  GisVirtualNetworkIzSubnetPrefix: '172.18.2.0/25'
  GisVirtualNetworkDataSubnetPrefix: '172.18.2.128/25'
  
jobs:
- job: DeployVnet
  steps:
  - task: AzureResourceManagerTemplateDeployment@3
    name: VnetTask
    inputs:
      #deploymentScope: 'Subscription'
      subscriptionId: $(SubscriptionId)
      connectedServiceName: $(ServiceConnectionName)
      location: $(DeploymentDefaultLocation)
      resourceGroupName: $(ResourceGroupName)
      csmFile: ./jobs/vnet/main.bicep
      #deploymentMode: 'Complete'
      deploymentOutputs: vnetOutput
      overrideParameters: >
              -resourceAgency "$(ResourceAgency)"
              -resourceLocation "$(DeploymentDefaultLocation)" 
              -environmentType "$(EnvironmentType)" 
              -networkConnectionSharedKey '$(NetworkConnectionSharedKey)'
              -deploySTSVpn: $(DeploySTSVpn)
              -deployConn: $(DeployConn)
              -deployHub: $(DeployHub)
              -peerHubSpoke: $(PeerHubSpoke)
              -sharedHubVirtualNetworkAddressPrefix "$(SharedHubVirtualNetworkAddressPrefix)"
              -sharedHubVirtualNetworkGatewaySubnetPrefix "$(SharedHubVirtualNetworkGatewaySubnetPrefix)"
              -sharedHubVirtualNetworkFwSubnetPrefix "$(SharedHubVirtualNetworkFwSubnetPrefix)"
              -sharedHubVirtualNetworkAppGwSubnetPrefix "$(SharedHubVirtualNetworkAppGwSubnetPrefix)"
              -gisVirtualNetworkAddressPrefix "$(GisVirtualNetworkAddressPrefix)"
              -gisVirtualNetworkIzSubnetPrefix "$(GisVirtualNetworkIzSubnetPrefix)"
              -gisVirtualNetworkDataSubnetPrefix "$(GisVirtualNetworkDataSubnetPrefix)"

  - powershell: |
      Write-Host "##vso[task.setvariable variable=SpokeVnetName;isOutput=true]$(vnetOutput.SpokeVnetName.value)"
    name: vnetVars
                
- job: DeployNsg
  dependsOn: DeployVnet
  variables:
    spokeVnetName: $[ dependencies.DeployVnet.outputs['vnetVars.SpokeVnetName'] ]  
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        #deploymentScope: 'Subscription'
        subscriptionId: $(SubscriptionId)
        connectedServiceName: $(ServiceConnectionName)
        location: $(DeploymentDefaultLocation)
        resourceGroupName: $(ResourceGroupName)
        csmFile: ./jobs/nsg/main.bicep
        #deploymentMode: 'Complete'
        overrideParameters: >
              -resourceAgency "$(ResourceAgency)"
              -resourceLocation "$(DeploymentDefaultLocation)" 
              -environmentType "$(EnvironmentType)" 
              -spokeVnetName $(spokeVnetName)
  
- job: DeployVM
  dependsOn: 
    - DeployVnet
    - DeployNsg
  variables:
    spokeVnetName: $[ dependencies.DeployVnet.outputs['vnetVars.SpokeVnetName'] ]  
  steps:
    - task: AzureResourceManagerTemplateDeployment@3
      name: vmResult
      inputs:
        #deploymentScope: 'Subscription'
        subscriptionId: $(SubscriptionId)
        connectedServiceName: $(ServiceConnectionName)
        location: $(DeploymentDefaultLocation)
        resourceGroupName: $(ResourceGroupName)
        csmFile: ./jobs/vm/main.bicep
        #deploymentMode: 'Complete'
        deploymentOutputs: vmOutput
        overrideParameters: >
              -resourceAgency "$(ResourceAgency)"
              -resourceLocation "$(DeploymentDefaultLocation)" 
              -environmentType "$(EnvironmentType)" 
              -virtualMachineSize "$(VirtualMachineSize)"
              -virtualNetworkSpokeName $(spokeVnetName)
              -adminPassword "$(VirtualMachineAdminPassword)"