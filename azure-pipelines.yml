# azure-pipelines.yml | San Marcos GIS on Azure
#
# Copyright (C) 2023 City of San Marcos CA
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

trigger:
  - development/app-dsc-bicep-integration
  
#pool:
#    vmImage: ubuntu-latest
  
pool:
  name: 'selfhostpool001'

variables:
  #DeploymentDefaultLocation: 'westus'
  System.Debug: true
  ResourceGroupName: 'rg-cosm-gis-devtest'
  networkConnectionSharedKey: ''
  #spokeVnetName: ''
  #VirtualMachineAdminPassword: ''
  #VirtualMachineSize: 'Standard_D2s_v4'

jobs:
  - job: DeployVnet
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          #deploymentScope: 'Subscription'
          subscriptionId: $(SubscriptionId)
          connectedServiceName: $(ServiceConnectionName)
          location: $(DeploymentDefaultLocation)
          resourceGroupName: $(ResourceGroupName)
          csmFile: ./jobs/vnet/main.bicep
          #deploymentMode: 'Complete'
          overrideParameters: >
            -resourceLocation "$(DeploymentDefaultLocation)" 
            -environmentType "$(EnvironmentType)" 
            -networkConnectionSharedKey '$(networkConnectionSharedKey)'
          deploymentOutputs: output
      - powershell: |
          echo "##vso[task.setvariable variable=spokeVnetName;isOutput=true]$(output)"
        name: setVar
              
  - job: DeployNsg
    dependsOn: DeployVnet
    variables:
      spokeVnetName: $[ dependencies.DeployVnet.outputs['setVar.spokeVnetName'] ]  
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          #deploymentScope: 'Subscription'
          subscriptionId: $(SubscriptionId)
          connectedServiceName: $(ServiceConnectionName)
          location: $(DeploymentDefaultLocation)
          resourceGroupName: $(ResourceGroupName)
          csmFile: ./jobs/nsg/main.bicep
          #deploymentMode: 'Complete'
          overrideParameters: >
            -resourceLocation "$(DeploymentDefaultLocation)" 
            -environmentType "$(EnvironmentType)" 
            -spokeVnetName $(spokeVnetName).outVnetName

  - job: DeployVM
    dependsOn: 
      - DeployVnet
      - DeployNsg
    variables:
      spokeVnetName: $[ dependencies.DeployVnet.outputs['setVar.spokeVnetName'] ]  
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          #deploymentScope: 'Subscription'
          subscriptionId: $(SubscriptionId)
          connectedServiceName: $(ServiceConnectionName)
          location: $(DeploymentDefaultLocation)
          resourceGroupName: $(ResourceGroupName)
          csmFile: ./jobs/vm/main.bicep
          #deploymentMode: 'Complete'
          overrideParameters: >
            -resourceLocation "$(DeploymentDefaultLocation)" 
            -environmentType "$(EnvironmentType)" 
            -virtualMachineSize "$(VirtualMachineSize)"
            -virtualNetworkSpokeName $(spokeVnetName).outVnetName
            -adminPassword "$(VirtualMachineAdminPassword)"
      
  # - job: DeployApp
  #   dependsOn: DeployVM
  #   steps:
  #     - task: AzureResourceManagerTemplateDeployment@3
  #       inputs:
  #         #deploymentScope: 'Subscription'
  #         subscriptionId: $(SubscriptionId)
  #         connectedServiceName: $(ServiceConnectionName)
  #         location: $(DeploymentDefaultLocation)
  #         resourceGroupName: $(ResourceGroupName)
  #         csmFile: ./jobs/vm/main.bicep
  #         deploymentMode: 'Complete'
  #         overrideParameters: >
  #             -resourceLocation "$(DeploymentDefaultLocation)" 
  #             -environmentType "$(EnvironmentType)" 